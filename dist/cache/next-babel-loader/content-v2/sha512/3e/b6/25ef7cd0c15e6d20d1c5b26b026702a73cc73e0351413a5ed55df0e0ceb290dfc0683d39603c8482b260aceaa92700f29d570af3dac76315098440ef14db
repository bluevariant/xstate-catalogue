{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\dccxx\\\\Projects\\\\js\\\\xstate-catalogue\\\\lib\\\\MachineHelpers.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { useSelector, useService } from '@xstate/react';\nimport React, { useContext, useEffect, useRef } from 'react';\nexport const MachineHelpersContext = /*#__PURE__*/React.createContext({});\nexport const State = props => {\n  const context = useContext(MachineHelpersContext);\n  const [state] = useService(context.service);\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: `font-mono inline-flex flex-wrap font-bold text-sm `,\n    children: props.children.split('.').map((a, index, array) => /*#__PURE__*/_jsxDEV(\"span\", {\n      className: `transition-colors py-1 ${index === 0 && 'pl-2'} ${index === array.length - 1 && 'pr-2'} ${state.matches(props.children) ? `bg-green-100 text-green-800` : 'bg-gray-100 text-gray-600'}`,\n      children: [a, index !== array.length - 1 && '.']\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\nexport const Event = props => {\n  var _context$metadata, _context$metadata$eve;\n\n  const context = useContext(MachineHelpersContext);\n  const [state, send] = useService(context.service);\n\n  const {\n    children\n  } = props,\n        event = _objectWithoutProperties(props, [\"children\"]);\n\n  const defaultEvent = ((_context$metadata = context.metadata) === null || _context$metadata === void 0 ? void 0 : (_context$metadata$eve = _context$metadata.eventPayloads) === null || _context$metadata$eve === void 0 ? void 0 : _context$metadata$eve[props.children]) || {};\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"text-left\",\n    onClick: () => {\n      send(_objectSpread(_objectSpread(_objectSpread({}, defaultEvent), event), {}, {\n        type: props.children\n      }));\n    } // To override prose\n    ,\n    style: {\n      margin: 0\n    },\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      className: `font-mono inline-flex flex-wrap font-bold text-sm `,\n      children: props.children.split('.').map((a, index, array) => /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `transition-colors py-1 ${index === 0 && 'pl-2'} ${index === array.length - 1 && 'pr-2'} ${state.nextEvents.includes(props.children) ? `bg-yellow-100 text-yellow-800` : 'bg-gray-100 text-gray-600'}`,\n        children: [a, index !== array.length - 1 && '.']\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\nexport const Action = props => {\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: `bg-gray-100 text-gray-600 font-mono font-bold text-sm px-2 py-1 transition-colors`,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\nexport const Guard = props => {\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: `bg-gray-100 text-gray-600 font-mono font-bold text-sm px-2 py-1 transition-colors`,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\nexport const Context = props => {\n  var _state$context$props$;\n\n  const context = useContext(MachineHelpersContext);\n  const [state] = useService(context.service);\n\n  let transform = entry => entry;\n\n  if (props.stringify) {\n    transform = entry => JSON.stringify(entry, null, 2);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: `bg-gray-100 text-gray-600 font-mono inline-flex flex-wrap font-bold text-sm px-2 py-1 transition-colors ${state.context[props.children] ? `bg-yellow-100 text-yellow-800` : ''}`,\n    children: [props.children, \":\", ' ', transform((_state$context$props$ = state.context[props.children]) !== null && _state$context$props$ !== void 0 ? _state$context$props$ : 'undefined')]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n};\nexport const WholeContext = () => {\n  const context = useContext(MachineHelpersContext);\n  const jsonContext = useSelector(context.service, state => {\n    return JSON.stringify(state.context, null, 2);\n  });\n  const jsonContextRef = useRef(null);\n  useEffect(() => {\n    // @ts-ignore\n    const hljs = window.hljs;\n\n    if (hljs) {\n      hljs.highlightBlock(jsonContextRef.current);\n    }\n  }, [jsonContextRef, jsonContext]);\n  return /*#__PURE__*/_jsxDEV(\"pre\", {\n    children: /*#__PURE__*/_jsxDEV(\"code\", {\n      ref: jsonContextRef,\n      className: \"json\",\n      children: jsonContext\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n};\nexport const Service = props => {\n  const context = useContext(MachineHelpersContext);\n  const isCurrentlyInvoked = useSelector(context.service, state => {\n    const nodesWhichInvokeThisService = state.configuration.filter(node => {\n      return node.invoke.some(invoke => invoke.src === props.children);\n    });\n    const isCurrentlyInvoked = nodesWhichInvokeThisService.some(node => state.matches(node.path));\n    return isCurrentlyInvoked;\n  });\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: `font-mono inline-flex flex-wrap font-bold text-sm px-2 py-1 transition-colors relative ${isCurrentlyInvoked ? `bg-blue-100 text-blue-800` : `bg-gray-100 text-gray-600`}`,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"sources":["C:/Users/dccxx/Projects/js/xstate-catalogue/lib/MachineHelpers.tsx"],"names":["useSelector","useService","React","useContext","useEffect","useRef","MachineHelpersContext","createContext","State","props","context","state","service","children","split","map","a","index","array","length","matches","Event","send","event","defaultEvent","metadata","eventPayloads","type","margin","nextEvents","includes","Action","Guard","Context","transform","entry","stringify","JSON","WholeContext","jsonContext","jsonContextRef","hljs","window","highlightBlock","current","Service","isCurrentlyInvoked","nodesWhichInvokeThisService","configuration","filter","node","invoke","some","src","path"],"mappings":"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","sourcesContent":["import { useSelector, useService } from '@xstate/react';\r\nimport React, { useContext, useEffect, useRef } from 'react';\r\nimport { Interpreter } from 'xstate';\r\n\r\nexport const MachineHelpersContext = React.createContext<{\r\n  service: Interpreter<any, any, any>;\r\n  metadata?: MDXMetadata;\r\n}>({} as any);\r\n\r\nexport interface MDXMetadata {\r\n  eventPayloads?: {\r\n    [eventType: string]: any;\r\n  };\r\n}\r\n\r\nexport const State = (props: { children: string }) => {\r\n  const context = useContext(MachineHelpersContext);\r\n  const [state] = useService(context.service);\r\n  return (\r\n    <span className={`font-mono inline-flex flex-wrap font-bold text-sm `}>\r\n      {props.children.split('.').map((a, index, array) => (\r\n        <span\r\n          key={index}\r\n          className={`transition-colors py-1 ${index === 0 && 'pl-2'} ${\r\n            index === array.length - 1 && 'pr-2'\r\n          } ${\r\n            state.matches(props.children)\r\n              ? `bg-green-100 text-green-800`\r\n              : 'bg-gray-100 text-gray-600'\r\n          }`}\r\n        >\r\n          {a}\r\n          {index !== array.length - 1 && '.'}\r\n        </span>\r\n      ))}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport const Event = (props: { children: string }) => {\r\n  const context = useContext(MachineHelpersContext);\r\n  const [state, send] = useService(context.service);\r\n\r\n  const { children, ...event } = props;\r\n\r\n  const defaultEvent = context.metadata?.eventPayloads?.[props.children] || {};\r\n\r\n  return (\r\n    <button\r\n      className=\"text-left\"\r\n      onClick={() => {\r\n        send({\r\n          ...defaultEvent,\r\n          ...event,\r\n          type: props.children,\r\n        });\r\n      }}\r\n      // To override prose\r\n      style={{ margin: 0 }}\r\n    >\r\n      <span className={`font-mono inline-flex flex-wrap font-bold text-sm `}>\r\n        {props.children.split('.').map((a, index, array) => (\r\n          <span\r\n            key={index}\r\n            className={`transition-colors py-1 ${index === 0 && 'pl-2'} ${\r\n              index === array.length - 1 && 'pr-2'\r\n            } ${\r\n              state.nextEvents.includes(props.children)\r\n                ? `bg-yellow-100 text-yellow-800`\r\n                : 'bg-gray-100 text-gray-600'\r\n            }`}\r\n          >\r\n            {a}\r\n            {index !== array.length - 1 && '.'}\r\n          </span>\r\n        ))}\r\n      </span>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport const Action = (props: { children: string }) => {\r\n  return (\r\n    <span\r\n      className={`bg-gray-100 text-gray-600 font-mono font-bold text-sm px-2 py-1 transition-colors`}\r\n    >\r\n      {props.children}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport const Guard = (props: { children: string }) => {\r\n  return (\r\n    <span\r\n      className={`bg-gray-100 text-gray-600 font-mono font-bold text-sm px-2 py-1 transition-colors`}\r\n    >\r\n      {props.children}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport const Context = (props: { children: string; stringify?: boolean }) => {\r\n  const context = useContext(MachineHelpersContext);\r\n  const [state] = useService(context.service);\r\n\r\n  let transform = (entry: string) => entry;\r\n\r\n  if (props.stringify) {\r\n    transform = (entry) => JSON.stringify(entry, null, 2);\r\n  }\r\n  return (\r\n    <span\r\n      className={`bg-gray-100 text-gray-600 font-mono inline-flex flex-wrap font-bold text-sm px-2 py-1 transition-colors ${\r\n        state.context[props.children] ? `bg-yellow-100 text-yellow-800` : ''\r\n      }`}\r\n    >\r\n      {props.children}:{' '}\r\n      {transform(state.context[props.children] ?? 'undefined')}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport const WholeContext = () => {\r\n  const context = useContext(MachineHelpersContext);\r\n  const jsonContext = useSelector(context.service, (state) => {\r\n    return JSON.stringify(state.context, null, 2);\r\n  });\r\n  const jsonContextRef = useRef(null);\r\n  useEffect(() => {\r\n    // @ts-ignore\r\n    const hljs: any = window.hljs;\r\n    if (hljs) {\r\n      hljs.highlightBlock(jsonContextRef.current);\r\n    }\r\n  }, [jsonContextRef, jsonContext]);\r\n  return (\r\n    <pre>\r\n      <code ref={jsonContextRef} className=\"json\">\r\n        {jsonContext}\r\n      </code>\r\n    </pre>\r\n  );\r\n};\r\n\r\nexport const Service = (props: { children: string }) => {\r\n  const context = useContext(MachineHelpersContext);\r\n  const isCurrentlyInvoked = useSelector(context.service, (state) => {\r\n    const nodesWhichInvokeThisService = state.configuration.filter((node) => {\r\n      return node.invoke.some((invoke) => invoke.src === props.children);\r\n    });\r\n\r\n    const isCurrentlyInvoked = nodesWhichInvokeThisService.some((node) =>\r\n      state.matches(node.path),\r\n    );\r\n    return isCurrentlyInvoked;\r\n  });\r\n\r\n  return (\r\n    <span\r\n      className={`font-mono inline-flex flex-wrap font-bold text-sm px-2 py-1 transition-colors relative ${\r\n        isCurrentlyInvoked\r\n          ? `bg-blue-100 text-blue-800`\r\n          : `bg-gray-100 text-gray-600`\r\n      }`}\r\n    >\r\n      {props.children}\r\n    </span>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}