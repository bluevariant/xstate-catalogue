{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/dccxx/Projects/js/xstate-catalogue/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/dccxx/Projects/js/xstate-catalogue/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { assign, createMachine } from 'xstate';\nvar authenticationMachine = createMachine({\n  id: 'authentication',\n  initial: 'checkingIfLoggedIn',\n  states: {\n    checkingIfLoggedIn: {\n      invoke: {\n        src: 'checkIfLoggedIn',\n        onError: {\n          target: 'loggedOut'\n        }\n      },\n      on: {\n        REPORT_IS_LOGGED_IN: {\n          target: 'loggedIn',\n          actions: 'assignUserDetailsToContext'\n        },\n        REPORT_IS_LOGGED_OUT: 'loggedOut'\n      }\n    },\n    loggedIn: {\n      on: {\n        LOG_OUT: {\n          target: 'loggedOut'\n        }\n      }\n    },\n    loggedOut: {\n      entry: ['navigateToAuthPage', 'clearUserDetailsFromContext'],\n      on: {\n        LOG_IN: {\n          target: 'loggedIn',\n          actions: 'assignUserDetailsToContext'\n        }\n      }\n    }\n  }\n}, {\n  services: {\n    checkIfLoggedIn: function checkIfLoggedIn() {\n      return /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(send) {\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }();\n    }\n  },\n  actions: {\n    navigateToAuthPage: function navigateToAuthPage() {// When the user is logged out, we\n      // should take them to the /auth route\n    },\n    assignUserDetailsToContext: assign(function (context, event) {\n      if (event.type !== 'REPORT_IS_LOGGED_IN') {\n        return {};\n      }\n\n      return {\n        userDetails: event.userDetails\n      };\n    }),\n    clearUserDetailsFromContext: assign({\n      userDetails: undefined\n    })\n  }\n});\nexport default authenticationMachine;","map":{"version":3,"sources":["C:/Users/dccxx/Projects/js/xstate-catalogue/lib/machines/authentication.machine.ts"],"names":["assign","createMachine","authenticationMachine","id","initial","states","checkingIfLoggedIn","invoke","src","onError","target","on","REPORT_IS_LOGGED_IN","actions","REPORT_IS_LOGGED_OUT","loggedIn","LOG_OUT","loggedOut","entry","LOG_IN","services","checkIfLoggedIn","send","navigateToAuthPage","assignUserDetailsToContext","context","event","type","userDetails","clearUserDetailsFromContext","undefined"],"mappings":";;AAAA,SAASA,MAAT,EAAiBC,aAAjB,QAA8C,QAA9C;AA0BA,IAAMC,qBAAqB,GAAGD,aAAa,CAIzC;AACEE,EAAAA,EAAE,EAAE,gBADN;AAEEC,EAAAA,OAAO,EAAE,oBAFX;AAGEC,EAAAA,MAAM,EAAE;AACNC,IAAAA,kBAAkB,EAAE;AAClBC,MAAAA,MAAM,EAAE;AACNC,QAAAA,GAAG,EAAE,iBADC;AAENC,QAAAA,OAAO,EAAE;AACPC,UAAAA,MAAM,EAAE;AADD;AAFH,OADU;AAOlBC,MAAAA,EAAE,EAAE;AACFC,QAAAA,mBAAmB,EAAE;AACnBF,UAAAA,MAAM,EAAE,UADW;AAEnBG,UAAAA,OAAO,EAAE;AAFU,SADnB;AAKFC,QAAAA,oBAAoB,EAAE;AALpB;AAPc,KADd;AAgBNC,IAAAA,QAAQ,EAAE;AACRJ,MAAAA,EAAE,EAAE;AACFK,QAAAA,OAAO,EAAE;AACPN,UAAAA,MAAM,EAAE;AADD;AADP;AADI,KAhBJ;AAuBNO,IAAAA,SAAS,EAAE;AACTC,MAAAA,KAAK,EAAE,CAAC,oBAAD,EAAuB,6BAAvB,CADE;AAETP,MAAAA,EAAE,EAAE;AACFQ,QAAAA,MAAM,EAAE;AACNT,UAAAA,MAAM,EAAE,UADF;AAENG,UAAAA,OAAO,EAAE;AAFH;AADN;AAFK;AAvBL;AAHV,CAJyC,EAyCzC;AACEO,EAAAA,QAAQ,EAAE;AACRC,IAAAA,eAAe,EAAE;AAAA;AAAA,4EAAM,iBACrBC,IADqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAN;;AAAA;AAAA;AAAA;AAAA;AAAA;AADT,GADZ;AAoBET,EAAAA,OAAO,EAAE;AACPU,IAAAA,kBAAkB,EAAE,8BAAM,CACxB;AACA;AACD,KAJM;AAKPC,IAAAA,0BAA0B,EAAExB,MAAM,CAAC,UAACyB,OAAD,EAAUC,KAAV,EAAoB;AACrD,UAAIA,KAAK,CAACC,IAAN,KAAe,qBAAnB,EAA0C;AACxC,eAAO,EAAP;AACD;;AACD,aAAO;AACLC,QAAAA,WAAW,EAAEF,KAAK,CAACE;AADd,OAAP;AAGD,KAPiC,CAL3B;AAaPC,IAAAA,2BAA2B,EAAE7B,MAAM,CAAC;AAClC4B,MAAAA,WAAW,EAAEE;AADqB,KAAD;AAb5B;AApBX,CAzCyC,CAA3C;AAiFA,eAAe5B,qBAAf","sourcesContent":["import { assign, createMachine, Sender } from 'xstate';\r\n\r\nexport type AuthenticationMachineContext = {\r\n  userDetails?: UserDetails;\r\n};\r\n\r\ninterface UserDetails {\r\n  username: string;\r\n}\r\n\r\nexport type AuthenticationMachineEvent =\r\n  | {\r\n      type: 'REPORT_IS_LOGGED_IN';\r\n      userDetails: UserDetails;\r\n    }\r\n  | {\r\n      type: 'REPORT_IS_LOGGED_OUT';\r\n    }\r\n  | {\r\n      type: 'LOG_OUT';\r\n    }\r\n  | {\r\n      type: 'LOG_IN';\r\n      userDetails: UserDetails;\r\n    };\r\n\r\nconst authenticationMachine = createMachine<\r\n  AuthenticationMachineContext,\r\n  AuthenticationMachineEvent\r\n>(\r\n  {\r\n    id: 'authentication',\r\n    initial: 'checkingIfLoggedIn',\r\n    states: {\r\n      checkingIfLoggedIn: {\r\n        invoke: {\r\n          src: 'checkIfLoggedIn',\r\n          onError: {\r\n            target: 'loggedOut',\r\n          },\r\n        },\r\n        on: {\r\n          REPORT_IS_LOGGED_IN: {\r\n            target: 'loggedIn',\r\n            actions: 'assignUserDetailsToContext',\r\n          },\r\n          REPORT_IS_LOGGED_OUT: 'loggedOut',\r\n        },\r\n      },\r\n      loggedIn: {\r\n        on: {\r\n          LOG_OUT: {\r\n            target: 'loggedOut',\r\n          },\r\n        },\r\n      },\r\n      loggedOut: {\r\n        entry: ['navigateToAuthPage', 'clearUserDetailsFromContext'],\r\n        on: {\r\n          LOG_IN: {\r\n            target: 'loggedIn',\r\n            actions: 'assignUserDetailsToContext',\r\n          },\r\n        },\r\n      },\r\n    },\r\n  },\r\n  {\r\n    services: {\r\n      checkIfLoggedIn: () => async (\r\n        send: Sender<AuthenticationMachineEvent>,\r\n      ) => {\r\n        // Perform some async check here\r\n        // if (isLoggedIn) {\r\n        //   send({\r\n        //     type: \"REPORT_IS_LOGGED_IN\",\r\n        //     userDetails: {\r\n        //       username: \"mpocock1\",\r\n        //     },\r\n        //   });\r\n        // } else {\r\n        //   send({\r\n        //     type: \"REPORT_IS_LOGGED_OUT\",\r\n        //   });\r\n        // }\r\n      },\r\n    },\r\n    actions: {\r\n      navigateToAuthPage: () => {\r\n        // When the user is logged out, we\r\n        // should take them to the /auth route\r\n      },\r\n      assignUserDetailsToContext: assign((context, event) => {\r\n        if (event.type !== 'REPORT_IS_LOGGED_IN') {\r\n          return {};\r\n        }\r\n        return {\r\n          userDetails: event.userDetails,\r\n        };\r\n      }),\r\n      clearUserDetailsFromContext: assign({\r\n        userDetails: undefined,\r\n      }),\r\n    },\r\n  },\r\n);\r\n\r\nexport default authenticationMachine;\r\n"]},"metadata":{},"sourceType":"module"}