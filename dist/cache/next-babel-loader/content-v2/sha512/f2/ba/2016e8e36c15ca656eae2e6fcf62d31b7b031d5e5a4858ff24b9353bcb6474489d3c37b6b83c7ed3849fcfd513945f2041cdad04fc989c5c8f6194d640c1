{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useSelector } from '@xstate/react';\nimport { createMachine, interpret } from 'xstate';\nvar localStorage = true ? window.localStorage : undefined;\nexport var globalStateMachine = createMachine({\n  type: 'parallel',\n  states: {\n    layout: {\n      initial: 'checking',\n      states: {\n        checking: {\n          always: [{\n            cond: 'isVerticalLayout',\n            target: 'vertical'\n          }, {\n            cond: 'isHorizontalLayout',\n            target: 'horizontal'\n          }, {\n            target: 'blog'\n          }]\n        },\n        blog: {\n          entry: ['saveBlogLayoutToLocalStorage'],\n          on: {\n            TOGGLE_LAYOUT: 'horizontal'\n          }\n        },\n        horizontal: {\n          entry: ['saveHorizontalLayoutToLocalStorage'],\n          on: {\n            TOGGLE_LAYOUT: 'vertical'\n          }\n        },\n        vertical: {\n          entry: ['saveVerticalLayoutToLocalStorage'],\n          on: {\n            TOGGLE_LAYOUT: 'blog'\n          }\n        }\n      }\n    }\n  }\n}, {\n  guards: {\n    isVerticalLayout: function isVerticalLayout() {\n      return (localStorage === null || localStorage === void 0 ? void 0 : localStorage.getItem('XSTATE_CATALOGUE_LAYOUT')) === 'vertical';\n    },\n    isHorizontalLayout: function isHorizontalLayout() {\n      return (localStorage === null || localStorage === void 0 ? void 0 : localStorage.getItem('XSTATE_CATALOGUE_LAYOUT')) === 'horizontal';\n    }\n  },\n  actions: {\n    saveBlogLayoutToLocalStorage: function saveBlogLayoutToLocalStorage() {\n      localStorage === null || localStorage === void 0 ? void 0 : localStorage.setItem('XSTATE_CATALOGUE_LAYOUT', 'blog');\n    },\n    saveHorizontalLayoutToLocalStorage: function saveHorizontalLayoutToLocalStorage() {\n      localStorage === null || localStorage === void 0 ? void 0 : localStorage.setItem('XSTATE_CATALOGUE_LAYOUT', 'horizontal');\n    },\n    saveVerticalLayoutToLocalStorage: function saveVerticalLayoutToLocalStorage() {\n      localStorage === null || localStorage === void 0 ? void 0 : localStorage.setItem('XSTATE_CATALOGUE_LAYOUT', 'vertical');\n    }\n  }\n});\nexport var globalStateService = undefined;\n\nif (true) {\n  globalStateService = interpret(globalStateMachine).start();\n}\n\nexport var useLayout = function useLayout() {\n  _s();\n\n  if (!globalStateService) return null;\n  var layout = useSelector(globalStateService, function (state) {\n    if (state.matches('layout.blog')) {\n      return 'blog';\n    }\n\n    if (state.matches('layout.vertical')) {\n      return 'vertical';\n    }\n\n    if (state.matches('layout.horizontal')) {\n      return 'horizontal';\n    }\n\n    return null;\n  });\n  return layout;\n};\n\n_s(useLayout, \"+w2bqHc/0M9O37Pe4AL53n/fos0=\", false, function () {\n  return [useSelector];\n});","map":{"version":3,"sources":["C:/Users/dccxx/Projects/js/xstate-catalogue/lib/GlobalState.ts"],"names":["useSelector","createMachine","interpret","localStorage","window","undefined","globalStateMachine","type","states","layout","initial","checking","always","cond","target","blog","entry","on","TOGGLE_LAYOUT","horizontal","vertical","guards","isVerticalLayout","getItem","isHorizontalLayout","actions","saveBlogLayoutToLocalStorage","setItem","saveHorizontalLayoutToLocalStorage","saveVerticalLayoutToLocalStorage","globalStateService","start","useLayout","state","matches"],"mappings":"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","sourcesContent":["import { useSelector } from '@xstate/react';\r\nimport { createMachine, interpret, Interpreter } from 'xstate';\r\n\r\ninterface GlobalStateContext {}\r\n\r\nexport type GlobalStateEvent = {\r\n  type: 'TOGGLE_LAYOUT';\r\n};\r\n\r\nconst localStorage =\r\n  typeof window !== 'undefined' ? window.localStorage : undefined;\r\n\r\nexport const globalStateMachine = createMachine<\r\n  GlobalStateContext,\r\n  GlobalStateEvent\r\n>(\r\n  {\r\n    type: 'parallel',\r\n    states: {\r\n      layout: {\r\n        initial: 'checking',\r\n        states: {\r\n          checking: {\r\n            always: [\r\n              {\r\n                cond: 'isVerticalLayout',\r\n                target: 'vertical',\r\n              },\r\n              {\r\n                cond: 'isHorizontalLayout',\r\n                target: 'horizontal',\r\n              },\r\n              {\r\n                target: 'blog',\r\n              },\r\n            ],\r\n          },\r\n          blog: {\r\n            entry: ['saveBlogLayoutToLocalStorage'],\r\n            on: {\r\n              TOGGLE_LAYOUT: 'horizontal',\r\n            },\r\n          },\r\n          horizontal: {\r\n            entry: ['saveHorizontalLayoutToLocalStorage'],\r\n            on: {\r\n              TOGGLE_LAYOUT: 'vertical',\r\n            },\r\n          },\r\n          vertical: {\r\n            entry: ['saveVerticalLayoutToLocalStorage'],\r\n            on: {\r\n              TOGGLE_LAYOUT: 'blog',\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n  },\r\n  {\r\n    guards: {\r\n      isVerticalLayout: () => {\r\n        return localStorage?.getItem('XSTATE_CATALOGUE_LAYOUT') === 'vertical';\r\n      },\r\n      isHorizontalLayout: () => {\r\n        return (\r\n          localStorage?.getItem('XSTATE_CATALOGUE_LAYOUT') === 'horizontal'\r\n        );\r\n      },\r\n    },\r\n    actions: {\r\n      saveBlogLayoutToLocalStorage: () => {\r\n        localStorage?.setItem('XSTATE_CATALOGUE_LAYOUT', 'blog');\r\n      },\r\n      saveHorizontalLayoutToLocalStorage: () => {\r\n        localStorage?.setItem('XSTATE_CATALOGUE_LAYOUT', 'horizontal');\r\n      },\r\n      saveVerticalLayoutToLocalStorage: () => {\r\n        localStorage?.setItem('XSTATE_CATALOGUE_LAYOUT', 'vertical');\r\n      },\r\n    },\r\n  },\r\n);\r\n\r\nexport let globalStateService = undefined as Interpreter<\r\n  GlobalStateContext,\r\n  any,\r\n  GlobalStateEvent\r\n>;\r\n\r\nif (typeof window !== 'undefined') {\r\n  globalStateService = interpret(globalStateMachine).start();\r\n}\r\n\r\nexport const useLayout = () => {\r\n  if (!globalStateService) return null;\r\n  const layout = useSelector(globalStateService, (state) => {\r\n    if (state.matches('layout.blog')) {\r\n      return 'blog';\r\n    }\r\n    if (state.matches('layout.vertical')) {\r\n      return 'vertical';\r\n    }\r\n    if (state.matches('layout.horizontal')) {\r\n      return 'horizontal';\r\n    }\r\n    return null;\r\n  });\r\n  return layout;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}