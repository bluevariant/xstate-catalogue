{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _toConsumableArray from \"C:/Users/dccxx/Projects/js/xstate-catalogue/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"C:/Users/dccxx/Projects/js/xstate-catalogue/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/dccxx/Projects/js/xstate-catalogue/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\dccxx\\\\Projects\\\\js\\\\xstate-catalogue\\\\pages\\\\views\\\\[id].tsx\",\n    _s = $RefreshSig$(),\n    _this = this,\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nimport { inspect } from \"@xstate/inspect\";\nimport { useInterpret } from \"@xstate/react\";\nimport Head from \"next/head\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useLayout } from \"../../lib/GlobalState\";\nimport { MachineHelpersContext } from \"../../lib/MachineHelpers\";\nimport $ from \"jquery\";\n\nvar useGetImports = function useGetImports(slug, deps) {\n  _s();\n\n  var _useState = useState(),\n      imports = _useState[0],\n      setImports = _useState[1];\n\n  var getMachine = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var machineImport, mdxDoc;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setImports(undefined);\n              _context.next = 3;\n              return import(\"../../lib/machines/\".concat(slug, \".machine.ts\"));\n\n            case 3:\n              machineImport = _context.sent;\n              _context.next = 6;\n              return import(\"../../lib/machines/\".concat(slug, \".mdx\"));\n\n            case 6:\n              mdxDoc = _context.sent;\n              setImports({\n                machine: machineImport[\"default\"],\n                mdxDoc: mdxDoc[\"default\"],\n                mdxMetadata: mdxDoc.metadata\n              });\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getMachine() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    getMachine();\n  }, [slug].concat(_toConsumableArray(deps)));\n  return imports;\n};\n\n_s(useGetImports, \"neCPgv9UbWzuI2J9xf9u7yRRWOA=\");\n\nvar MachinePage = function MachinePage(props) {\n  _s2();\n\n  var layout = useLayout();\n  var imports = useGetImports(props.slug, [layout]);\n  var iframeRef = useRef(null);\n\n  var _onLoad = function _onLoad() {\n    var $iframe = $('iframe[data-id=\"mod\"]').contents();\n    console.log($iframe);\n  };\n\n  useEffect(function () {\n    var _inspect = inspect({\n      iframe: function iframe() {\n        return iframeRef.current;\n      },\n      // url: \"http://localhost:3000/api/inspect\",\n      url: \"https://statecharts.io/inspect\"\n    }),\n        disconnect = _inspect.disconnect;\n\n    return function () {\n      disconnect();\n    };\n  }, [layout, props.slug]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: [props.meta.title, \" | XState Catalogue\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Layout, {\n      content: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: imports && /*#__PURE__*/_jsxDEV(ShowMachinePage, {\n          slug: props.slug,\n          machine: imports.machine,\n          mdxDoc: imports.mdxDoc,\n          fileText: props.fileText,\n          meta: props.meta,\n          mdxMetadata: imports.mdxMetadata\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, _this)\n      }, void 0, false),\n      iframe: /*#__PURE__*/_jsxDEV(\"iframe\", {\n        ref: iframeRef,\n        className: \"w-full h-full\",\n        \"data-id\": \"mod\",\n        onLoad: _onLoad\n      }, \"iframe\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_s2(MachinePage, \"QzbyQRHFLm9RTqfY/07aLjhHIh4=\", false, function () {\n  return [useLayout, useGetImports];\n});\n\n_c = MachinePage;\n\nvar Layout = function Layout(props) {\n  _s3();\n\n  useEffect(function () {\n    document.body.style.overflowY = \"hidden\";\n    return function () {\n      document.body.style.overflowY = \"auto\";\n    };\n  }, [props.content, props.iframe]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hidden mb-16 bg-black md:block\",\n      style: {\n        height: \"calc(100vh - 50px)\"\n      },\n      children: props.iframe\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: props.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, _this);\n};\n\n_s3(Layout, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c2 = Layout;\n\nvar ShowMachinePage = function ShowMachinePage(props) {\n  _s4();\n\n  var service = useInterpret(props.machine, {\n    devTools: true\n  });\n  return /*#__PURE__*/_jsxDEV(MachineHelpersContext.Provider, {\n    value: {\n      service: service,\n      metadata: props.mdxMetadata\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 10\n  }, _this);\n};\n\n_s4(ShowMachinePage, \"i+nVD9X14UTWmlpgK+vsUEGYQX8=\", false, function () {\n  return [useInterpret];\n});\n\n_c3 = ShowMachinePage;\nexport var __N_SSG = true;\nexport default MachinePage;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"MachinePage\");\n$RefreshReg$(_c2, \"Layout\");\n$RefreshReg$(_c3, \"ShowMachinePage\");","map":{"version":3,"sources":["C:/Users/dccxx/Projects/js/xstate-catalogue/pages/views/[id].tsx"],"names":["inspect","useInterpret","Head","React","useEffect","useRef","useState","useLayout","MachineHelpersContext","$","useGetImports","slug","deps","imports","setImports","getMachine","undefined","machineImport","mdxDoc","machine","mdxMetadata","metadata","MachinePage","props","layout","iframeRef","_onLoad","$iframe","contents","console","log","iframe","current","url","disconnect","meta","title","fileText","Layout","document","body","style","overflowY","content","height","ShowMachinePage","service","devTools"],"mappings":"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","sourcesContent":["import { inspect } from \"@xstate/inspect\";\nimport { useInterpret } from \"@xstate/react\";\nimport { GetStaticPaths, InferGetStaticPropsType, NextPage } from \"next\";\nimport Head from \"next/head\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { StateMachine } from \"xstate\";\nimport { useLayout } from \"../../lib/GlobalState\";\nimport { MachineHelpersContext, MDXMetadata } from \"../../lib/MachineHelpers\";\nimport { metadata, MetadataItem } from \"../../lib/metadata\";\nimport $ from \"jquery\";\n\nconst useGetImports = (slug: string, deps: any[]) => {\n  const [imports, setImports] = useState<{\n    machine: StateMachine<any, any, any>;\n    mdxDoc: any;\n    mdxMetadata?: MDXMetadata;\n  }>();\n\n  const getMachine = async () => {\n    setImports(undefined);\n    const machineImport: {\n      default: StateMachine<any, any, any>;\n    } = await import(`../../lib/machines/${slug}.machine.ts`);\n\n    const mdxDoc = await import(`../../lib/machines/${slug}.mdx`);\n\n    setImports({\n      machine: machineImport.default,\n      mdxDoc: mdxDoc.default,\n      mdxMetadata: mdxDoc.metadata,\n    });\n  };\n\n  useEffect(() => {\n    getMachine();\n  }, [slug, ...deps]);\n\n  return imports;\n};\n\nexport const getStaticProps = async ({ params }) => {\n  const fs = await import(\"fs\");\n  const path = await import(\"path\");\n\n  const machinesPath = path.resolve(process.cwd(), \"lib/machines\", `${params.id}.machine.ts`);\n\n  const meta = metadata[params.id];\n\n  if (!meta) {\n    throw new Error(`Could not find metadata for ${params.id}. Go to lib/metadata.ts to fix.`);\n  }\n\n  return {\n    props: {\n      slug: params.id as string,\n      fileText: fs.readFileSync(machinesPath).toString(),\n      meta,\n    },\n  };\n};\n\nconst MachinePage: NextPage<InferGetStaticPropsType<typeof getStaticProps>> = (props) => {\n  const layout = useLayout();\n  const imports = useGetImports(props.slug, [layout]);\n  const iframeRef = useRef(null);\n\n  const _onLoad = () => {\n    const $iframe = $('iframe[data-id=\"mod\"]').contents();\n\n    console.log($iframe);\n  };\n\n  useEffect(() => {\n    const { disconnect } = inspect({\n      iframe: () => iframeRef.current,\n      // url: \"http://localhost:3000/api/inspect\",\n      url: \"https://statecharts.io/inspect\",\n    });\n\n    return () => {\n      disconnect();\n    };\n  }, [layout, props.slug]);\n\n  return (\n    <>\n      <Head>\n        <title>{props.meta.title} | XState Catalogue</title>\n      </Head>\n      <Layout\n        content={\n          <>\n            {imports && (\n              <ShowMachinePage\n                slug={props.slug}\n                machine={imports.machine}\n                mdxDoc={imports.mdxDoc}\n                fileText={props.fileText}\n                meta={props.meta}\n                mdxMetadata={imports.mdxMetadata}\n              />\n            )}\n          </>\n        }\n        iframe={\n          <iframe\n            key=\"iframe\"\n            ref={iframeRef}\n            className=\"w-full h-full\"\n            data-id={\"mod\"}\n            onLoad={_onLoad}\n          />\n        }\n      />\n    </>\n  );\n};\n\nconst Layout = (props: { content: React.ReactNode; iframe: React.ReactNode }) => {\n  useEffect(() => {\n    document.body.style.overflowY = \"hidden\";\n\n    return () => {\n      document.body.style.overflowY = \"auto\";\n    };\n  }, [props.content, props.iframe]);\n\n  return (\n    <div>\n      <div className=\"hidden mb-16 bg-black md:block\" style={{ height: \"calc(100vh - 50px)\" }}>\n        {props.iframe}\n      </div>\n      <div>{props.content}</div>\n    </div>\n  );\n};\n\nconst ShowMachinePage = (props: {\n  machine: StateMachine<any, any, any>;\n  mdxDoc: any;\n  fileText: string;\n  slug: string;\n  meta: MetadataItem;\n  mdxMetadata?: MDXMetadata;\n}) => {\n  const service = useInterpret(props.machine, {\n    devTools: true,\n  });\n\n  return <MachineHelpersContext.Provider value={{ service, metadata: props.mdxMetadata }} />;\n};\n\nconst machinePathRegex = /\\.machine\\.ts$/;\n\nexport const getStaticPaths: GetStaticPaths = async () => {\n  const fs = await import(\"fs\");\n  const path = await import(\"path\");\n\n  const machinesPath = path.resolve(process.cwd(), \"lib/machines\");\n\n  const machines = fs.readdirSync(machinesPath);\n\n  return {\n    fallback: false,\n    paths: machines\n      .filter((machine) => machine.endsWith(\".ts\"))\n      .map((fileName) => {\n        return {\n          params: {\n            id: fileName.replace(machinePathRegex, \"\"),\n          },\n        };\n      }),\n  };\n};\n\nexport default MachinePage;\n"]},"metadata":{},"sourceType":"module"}