{"ast":null,"code":"import _objectWithoutProperties from \"C:/Users/dccxx/Projects/js/xstate-catalogue/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"C:/Users/dccxx/Projects/js/xstate-catalogue/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\dccxx\\\\Projects\\\\js\\\\xstate-catalogue\\\\lib\\\\machines\\\\authentication.mdx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nexport var metadata = {\n  title: \"Authentication\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", _objectSpread(_objectSpread({}, props), {}, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 14\n      }\n    }));\n  };\n};\n\nvar State = makeShortcode(\"State\");\n_c = State;\nvar Event = makeShortcode(\"Event\");\n_c2 = Event;\nvar Action = makeShortcode(\"Action\");\n_c3 = Action;\nvar layoutProps = {\n  metadata: metadata\n};\nvar MDXLayout = \"wrapper\";\nexport default function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _objectSpread(_objectSpread(_objectSpread({}, layoutProps), props), {}, {\n    components: components,\n    mdxType: \"MDXLayout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 10\n    }\n  }), mdx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, \"Authentication\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, \"This state machine handles authentication logic when using an external service, for instance AWS Amplify.\"), mdx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, \"Initial Check\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, \"We start off in \", mdx(State, {\n    mdxType: \"State\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 28\n    }\n  }, \"checkingIfLoggedIn\"), \". This state fires off an service which goes and checks if the user is logged in or not, asynchronously.\"), mdx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, \"If \", mdx(Event, {\n    mdxType: \"Event\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 34\n    }\n  }, \"REPORT_IS_LOGGED_OUT\"), \" gets triggered, we end up in \", mdx(State, {\n    mdxType: \"State\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 123\n    }\n  }, \"loggedOut\")), mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, \"If \", mdx(Event, {\n    mdxType: \"Event\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 34\n    }\n  }, \"REPORT_IS_LOGGED_IN\"), \" gets triggered, we end up in \", mdx(State, {\n    mdxType: \"State\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 122\n    }\n  }, \"loggedIn\"), mdx(\"ul\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, \"We also save some user details into context via \", mdx(Action, {\n    mdxType: \"Action\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 83\n    }\n  }, \"assignUserDetailsToContext\"))))), mdx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, \"Logged Out\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, \"Once the user is \", mdx(State, {\n    mdxType: \"State\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 29\n    }\n  }, \"loggedOut\"), \", we can log them back in with \", mdx(Event, {\n    mdxType: \"Event\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 108\n    }\n  }, \"LOG_IN\"), \".\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, \"Any time the user enters \", mdx(State, {\n    mdxType: \"State\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 37\n    }\n  }, \"loggedOut\"), \", we fire off \", mdx(Action, {\n    mdxType: \"Action\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 99\n    }\n  }, \"navigateToAuthPage\"), \" to send them to the login page.\"), mdx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, \"Logged In\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, \"In the initial check, if \", mdx(Event, {\n    mdxType: \"Event\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 37\n    }\n  }, \"REPORT_IS_LOGGED_IN\"), \" gets triggered, we end up in \", mdx(State, {\n    mdxType: \"State\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 125\n    }\n  }, \"loggedIn\"), \". From there the user can also log out with \", mdx(Event, {\n    mdxType: \"Event\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 216\n    }\n  }, \"LOG_OUT\"), \".\"));\n}\n_c4 = MDXContent;\n;\nMDXContent.isMDXComponent = true;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"State\");\n$RefreshReg$(_c2, \"Event\");\n$RefreshReg$(_c3, \"Action\");\n$RefreshReg$(_c4, \"MDXContent\");","map":{"version":3,"sources":["C:/Users/dccxx/Projects/js/xstate-catalogue/lib/machines/authentication.mdx"],"names":["React","mdx","metadata","title","makeShortcode","name","MDXDefaultShortcode","props","console","warn","State","Event","Action","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const metadata = {\n  title: \"Authentication\"\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n      console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n      return <div {...props}/>\n    };\nconst State = makeShortcode(\"State\");\nconst Event = makeShortcode(\"Event\");\nconst Action = makeShortcode(\"Action\");\nconst layoutProps = {\n  metadata\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1>{`Authentication`}</h1>\n    <p>{`This state machine handles authentication logic when using an external service, for instance AWS Amplify.`}</p>\n    <h2>{`Initial Check`}</h2>\n    <p>{`We start off in `}<State mdxType=\"State\">{`checkingIfLoggedIn`}</State>{`. This state fires off an service which goes and checks if the user is logged in or not, asynchronously.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`If `}<Event mdxType=\"Event\">{`REPORT_IS_LOGGED_OUT`}</Event>{` gets triggered, we end up in `}<State mdxType=\"State\">{`loggedOut`}</State></li>\n      <li parentName=\"ul\">{`If `}<Event mdxType=\"Event\">{`REPORT_IS_LOGGED_IN`}</Event>{` gets triggered, we end up in `}<State mdxType=\"State\">{`loggedIn`}</State>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`We also save some user details into context via `}<Action mdxType=\"Action\">{`assignUserDetailsToContext`}</Action></li>\n        </ul>\n      </li>\n    </ul>\n    <h2>{`Logged Out`}</h2>\n    <p>{`Once the user is `}<State mdxType=\"State\">{`loggedOut`}</State>{`, we can log them back in with `}<Event mdxType=\"Event\">{`LOG_IN`}</Event>{`.`}</p>\n    <p>{`Any time the user enters `}<State mdxType=\"State\">{`loggedOut`}</State>{`, we fire off `}<Action mdxType=\"Action\">{`navigateToAuthPage`}</Action>{` to send them to the login page.`}</p>\n    <h2>{`Logged In`}</h2>\n    <p>{`In the initial check, if `}<Event mdxType=\"Event\">{`REPORT_IS_LOGGED_IN`}</Event>{` gets triggered, we end up in `}<State mdxType=\"State\">{`loggedIn`}</State>{`. From there the user can also log out with `}<Event mdxType=\"Event\">{`LOG_OUT`}</Event>{`.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"]},"metadata":{},"sourceType":"module"}